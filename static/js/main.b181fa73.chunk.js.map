{"version":3,"sources":["components/Navbar.js","components/TextFom.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","prototype","PropTypes","string","isRequired","about","defaultProps","TextFom","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kOAMe,SAASA,EAAOC,GAC3B,OAGI,sBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,UACA,mBAAGD,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,cAAY,WAAW,cAAY,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAtL,SACE,sBAAMJ,UAAU,0BAGlB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,qBAAd,SACE,oBAAIA,UAAU,kBAAd,SACE,oBAAGA,UAAU,WAAWE,KAAK,IAA7B,kBAAsC,sBAAMF,UAAU,UAAhB,8BAW1C,sBAAKA,UAAU,+BAAf,UACE,uBAAOI,KAAK,WAAWE,QAASP,EAAMQ,WAAYP,UAAU,uBAAuBK,GAAG,kBACpF,uBAAOL,UAAU,uBAAuBQ,QAAQ,gBAAhD,kCASdV,EAAOW,UAAY,CACfN,MAAOO,IAAUC,OAAOC,WACxBC,MAAOH,IAAUC,OAAOC,YAG5Bd,EAAOgB,aAAc,CACjBX,MAAO,qBACPU,MAAO,S,MC7CI,SAASE,EAAQhB,GAE5B,IAkCA,EAAwBiB,mBAAS,wBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACA,sBAAKlB,UAAU,YAAf,UACQ,6BAAKD,EAAMoB,UACX,qBAAKnB,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeoB,MAAUH,EAAOI,SA7B/C,SAACC,GAElBJ,EAAQI,EAAMC,OAAOH,QA2BmEf,GAAG,QAAQmB,KAAK,QAEhG,wBAAQxB,UAAU,uBAAwBM,QA3CnC,WAEf,IAAImB,EAAUR,EAAKS,cACnBR,EAAQO,IAwCA,2CACA,wBAAQzB,UAAU,wBAA0BM,QAtCpC,WAEhB,IAAImB,EAAUR,EAAKU,cACnBT,EAAQO,IAmCA,2CACA,wBAAQzB,UAAU,wBAA0BM,QA3BvC,WACb,IAAIW,EAAOW,SAASC,eAAe,SACnCZ,EAAKa,SACLC,UAAUC,UAAUC,UAAUhB,EAAKG,QAwB3B,+BAEA,wBAAQpB,UAAU,wBAA0BM,QAjBtC,WACd,IAAImB,EAAUR,EAAKiB,MAAM,QACzBhB,EAAQO,EAAQU,KAAK,OAeb,mCAER,sBAAKnC,UAAU,YAAf,UACI,mDACA,8BAAIiB,EAAKiB,MAAM,KAAKE,OAApB,cAAuCnB,EAAKmB,OAA5C,cACA,8BAAI,KAAQnB,EAAKiB,MAAM,KAAKE,OAA5B,mBACA,yCACA,4BAAInB,U,WCRDoB,MAnCf,WACE,MAAuBrB,mBAAS,SAAhC,mBAAOf,EAAP,KAAaqC,EAAb,KAYA,OACE,qCAEA,cAACxC,EAAD,CAAQK,MAAM,aAAaU,MAAM,QAAQN,WAdzB,WACJ,UAATN,GACCqC,EAAQ,QACRV,SAASzB,MAAM,yBAGfmC,EAAQ,UACRV,SAASzB,MAAM,0BAO+CF,KAAMA,IACxE,qBAAKD,UAAU,iBAAf,SAWA,cAACe,EAAD,CAASI,QAAQ,6BAA6BlB,KAAMA,UChCzCsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BU,M","file":"static/js/main.b181fa73.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n      \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form> */}\r\n\r\n          <div className=\"custom-control custom-switch\">\r\n            <input type=\"checkbox\" onClick={props.toggleMode} className=\"custom-control-input\" id=\"customSwitch1\"/>\r\n              <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Switch Mode</label>\r\n          </div>  \r\n          \r\n                        \r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title: \"Title will go here\",\r\n    about: \"About\"\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextFom(props) {\r\n\r\n    const handeltoUp = ()=>{\r\n        // console.log(\"clicked!\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n\r\n    }\r\n    const handeltoLow = ()=>{\r\n        // console.log(\"clicked!\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n\r\n    }\r\n    const handelChange = (event)=>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    \r\n    const copyText = ()=>{\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    // const ReplaceText = ()=>{\r\n    //     let t = text;\r\n    //     // let p= t.replace()\r\n    //     let result = t.replace('Text',\"Sentence\")\r\n    //     setText(result);\r\n    // }\r\n    const extraSpace =()=>{\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"));\r\n    }\r\n    const [text, setText] = useState('Enter your Text Here');\r\n    // setText(\"THis is text bro\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n                <h2>{props.heading }</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value = { text } onChange={handelChange} id=\"mybox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\"  onClick={handeltoUp} >Click To Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary  mx-2\"   onClick={handeltoLow} >Click To Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary  mx-2\"   onClick={copyText} >Copy To Clipboard</button>\r\n                {/* <button className=\"btn btn-primary  mx-2\"   onClick={ReplaceText} >Click To Replace</button> */}\r\n                <button className=\"btn btn-primary  mx-2\"   onClick={extraSpace} > Remove extraSpace</button>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} letters</p>\r\n            <p>{0.008 * text.split(\" \").length} Reading Time</p>\r\n            <h3>preview</h3>\r\n            <p>{text}</p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import Navbar from './components/Navbar';\nimport './App.css';\nimport TextFom from './components/TextFom';\nimport { useState } from 'react/cjs/react.development';\n// import About from './components/About';\n// import Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [mode, setMode]= useState('light');\n  const toggleMode =() =>{\n    if(mode === 'light'){\n        setMode('dark');\n        document.title=\"TextUtills Dark Mode\";\n      }\n      else{\n        setMode('light ');\n        document.title=\"TextUtills Light Mode\";\n      }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"Textutiils\" about=\"About\" toggleMode= {toggleMode} mode={mode} />\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n        \n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n            \n          </Route>\n          \n    </Switch> */}\n    <TextFom heading=\"Enter The Text To Analyze:\" mode={mode}/>\n    </div>\n    {/* </Router> */}\n   </>\n    \n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}